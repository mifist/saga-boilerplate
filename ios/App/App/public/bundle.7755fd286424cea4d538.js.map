{"version":3,"file":"bundle.7755fd286424cea4d538.js","mappings":"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","sources":["webpack://react-boilerplate/webpack/universalModuleDefinition","webpack://react-boilerplate/./src/engine/context/CookieProvider.jsx","webpack://react-boilerplate/./src/engine/appCapacitor/helpers/helper.badge.js","webpack://react-boilerplate/./src/engine/appCapacitor/helpers/helper.haptics.js","webpack://react-boilerplate/./src/store/constants.js","webpack://react-boilerplate/./src/engine/appCapacitor/helpers/helper.capacitor.js","webpack://react-boilerplate/./src/engine/appCapacitor/helpers/helper.update.js","webpack://react-boilerplate/./src/engine/appCapacitor/helpers/pushNotifications.js","webpack://react-boilerplate/./src/engine/api/axiosAPI.js","webpack://react-boilerplate/./src/engine/hooks/useDeviceDetect.js","webpack://react-boilerplate/./src/engine/hooks/useMounted.js","webpack://react-boilerplate/./src/engine/hooks/useAsync.js","webpack://react-boilerplate/./src/engine/hooks/useAuthRole.js","webpack://react-boilerplate/./src/utils/history.js","webpack://react-boilerplate/./src/engine/context/User.context.jsx","webpack://react-boilerplate/./src/engine/context/AppProviders.jsx","webpack://react-boilerplate/./src/store/checkStore.js","webpack://react-boilerplate/./src/store/sagaInjectors.js","webpack://react-boilerplate/./src/store/injectSaga.js","webpack://react-boilerplate/./src/App/constants.js","webpack://react-boilerplate/./src/App/reducer.js","webpack://react-boilerplate/./src/store/reducers.js","webpack://react-boilerplate/./src/store/reducerInjectors.js","webpack://react-boilerplate/./src/store/injectReducer.js","webpack://react-boilerplate/./src/store/configureAppStore.js","webpack://react-boilerplate/./src/App/saga.js","webpack://react-boilerplate/./src/App/selectors.js","webpack://react-boilerplate/./src/App/index.js","webpack://react-boilerplate/./src/App/actions.js","webpack://react-boilerplate/./public/favicon.ico","webpack://react-boilerplate/./public/.htaccess","webpack://react-boilerplate/./src/root.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, () => {\nreturn ","import React, { useState } from 'react';\r\n\r\nconst CookieContext = React.createContext({});\r\n\r\nconst CookieProvider = ({ children }) => {\r\n  const [cookies, setCookies] = useState({});\r\n\r\n  const setCookie = (name, value, options = {}) => {\r\n    const cookieOptions = {\r\n      path: '/',\r\n      ...options,\r\n    };\r\n\r\n    document.cookie = `${name}=${value}; ${Object.entries(cookieOptions)\r\n      .map(([key, value]) => `${key}=${value}`)\r\n      .join('; ')}`;\r\n    setCookies({ ...cookies, [name]: value });\r\n  };\r\n\r\n  const getCookie = (name) => {\r\n    if (!cookies[name]) {\r\n      const cookieValue = document.cookie\r\n        .split('; ')\r\n        .find((cookie) => cookie.startsWith(`${name}=`));\r\n\r\n      if (cookieValue) {\r\n        setCookies({\r\n          ...cookies,\r\n          [name]: cookieValue.split('=')[1],\r\n        });\r\n      }\r\n    }\r\n\r\n    return cookies[name] || '';\r\n  };\r\n\r\n  return (\r\n    <CookieContext.Provider value={{ setCookie, getCookie }}>\r\n      {children}\r\n    </CookieContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CookieProvider;","import { Badge } from '@robingenz/capacitor-badge';\n\nconst getBadgeCount = async () => {\n  const result = await Badge.get();\n  return result.count;\n};\n\nconst setBadgeCount = async (count) => {\n  await Badge.set({ count });\n};\n\nconst increaseBadge = async () => {\n  await Badge.increase();\n};\n\nconst decreaseBadge = async () => {\n  await Badge.decrease();\n};\n\nconst clearBadge = async () => {\n  await Badge.clear();\n};\n\nconst isSupportedBadge = async () => {\n  const result = await Badge.isSupported();\n  return result.isSupported;\n};\n\nconst checkPermissionsBadge = async () => {\n  const result = await Badge.checkPermissions();\n // console.debug('checkPermissionsBadge', JSON.stringify(result));\n  return result;\n};\n\nconst requestPermissionsBadge = async () => {\n  const result = await Badge.requestPermissions();\n // console.debug('requestPermissionsBadge', JSON.stringify(result));\n  return result;\n};\n\nexport default {\n  getBadgeCount,\n  setBadgeCount,\n  increaseBadge,\n  decreaseBadge,\n  clearBadge,\n  isSupportedBadge,\n  checkPermissionsBadge,\n  requestPermissionsBadge\n}\n","// The Haptics API provides physical feedback to the user through touch or vibration.\r\n// On devices that don't have Taptic Engine or Vibrator, the API calls will resolve without performing any action.\r\n// Docs: https://capacitorjs.com/docs/apis/haptics#selectionchanged\r\nimport { Haptics, ImpactStyle } from '@capacitor/haptics';\r\n\r\nconst hapticsImpactMedium = async () => {\r\n  await Haptics.impact({ style: ImpactStyle.Medium });\r\n};\r\n\r\nconst hapticsImpactLight = async () => {\r\n  await Haptics.impact({ style: ImpactStyle.Light });\r\n};\r\n\r\nconst hapticsVibrate = async () => {\r\n  await Haptics.vibrate();\r\n};\r\n\r\nconst hapticsSelectionStart = async () => {\r\n  await Haptics.selectionStart();\r\n};\r\n\r\nconst hapticsSelectionChanged = async () => {\r\n  await Haptics.selectionChanged();\r\n};\r\n\r\nconst hapticsSelectionEnd = async () => {\r\n  await Haptics.selectionEnd();\r\n};\r\n\r\nexport default {\r\n  hapticsImpactMedium,\r\n  hapticsImpactLight,\r\n  hapticsVibrate,\r\n  hapticsSelectionStart,\r\n  hapticsSelectionChanged,\r\n  hapticsSelectionEnd\r\n}","export const RESTART_ON_REMOUNT = '@@saga-injector/restart-on-remount';\nexport const DAEMON = '@@saga-injector/daemon';\nexport const ONCE_TILL_UNMOUNT = '@@saga-injector/once-till-unmount';\n\nexport const APP_VERSION = process.env.APP_VERSION;\n\nconst BASE_API = process.env.LOCAL_BACKEND || process.env.LOCAL_HOST || 'localhost'; // 192.168.31.226 || 172.31.176.1\nconst BASE_NAME = process.env.BASE_NAME || '';\n\nexport const DEVELOPMENT_LOCAL_API_URL = 'http://localhost:8080/api/';\nexport const DEVELOPMENT_LOCAL_APP_API_URL = `http://${BASE_API.toString()}:8080/api/`;\n\nexport const DEVELOPMENT_API_URL = `https://${BASE_NAME}-dev.herokuapp.com/api/`;\nexport const STAGING_API_URL = `https://${BASE_NAME}.herokuapp.com/api/`;\nexport const PRODUCTION_API_URL = `https://${BASE_NAME}-app.herokuapp.com/api/`;\n\nexport const LEGACY_API_URL = `https://${BASE_NAME}.com/api/`;\nexport const PROXY_API_URL = 'https://tcf-reverse-proxy.herokuapp.com/';\n\nexport const DEVELOPMENT_HOSTING_URL = 'http://localhost:3000/';\nexport const STAGING_HOSTING_URL = `https://beta.${BASE_NAME}.com/`;\nexport const PRODUCTION_HOSTING_URL = `https://app.${BASE_NAME}.com/`;\n\nexport const APPLE_STORE_URL = `https://apps.apple.com/fr/app/${BASE_NAME}/id1588569081`;\nexport const ANDROID_STORE_URL = `https://play.google.com/store/apps/details?id=com.${BASE_NAME}.app`;\n\nexport const STORAGE_BUCKET_URL = `https://storage.googleapis.com/${BASE_NAME}-dev`;\n","// appCapacitor/helper.capacitor.js\nimport { Capacitor } from '@capacitor/core';\nimport { PushNotifications } from '@capacitor/push-notifications';\nimport { Camera, CameraResultType, CameraSource } from '@capacitor/camera';\nimport { Device } from '@capacitor/device';\nimport { App } from '@capacitor/app';\nimport { Browser } from '@capacitor/browser';\n// Custom Voice recorder\nimport { VoiceRecorder } from 'capacitor-voice-recorder';\n\n\n// utils\nimport {\n  DEVELOPMENT_LOCAL_API_URL,\n  DEVELOPMENT_LOCAL_APP_API_URL,\n  DEVELOPMENT_API_URL,\n  STAGING_API_URL,\n  PRODUCTION_API_URL,\n} from 'store/constants';\n\nexport const isWeb = Capacitor.platform == 'web';\nexport const isAndroid = Capacitor.platform == 'android';\nexport const isIos = Capacitor.platform == 'ios';\n\nexport const deviceInfo = async () => {\n  return await Device.getInfo().then(result => result);\n};\n// return: name, id, build, varsion\nexport const appInfo = async () => {\n  return await App.getInfo().then(result => result);\n};\n// return isActive or not\nexport const appGetState = async () => {\n  return await App.getState().then(result => result);\n};\nexport const appGetLanguageCode = async () => {\n  return await Device.getLanguageCode().then(result => result);\n};\n\n\nexport const getBaseApiUrl = () => {\n  /* \n  const nodeENV = process.env.NODE_ENV,\n    baseENV = process.env.BASE_ENV; */\n\n  let apiURL = DEVELOPMENT_LOCAL_API_URL;\n\n  // web\n  if (isWeb && process.env.BASE_ENV === 'production') {\n    if (window.location.origin.includes(process.env.APP_URL)) {\n      apiURL = PRODUCTION_API_URL;\n    } else {\n      apiURL = STAGING_API_URL;\n    }\n  } else if ( isWeb && process.env.BASE_ENV === 'staging' || !isWeb && process.env.BASE_ENV === 'staging' ) {\n    apiURL = STAGING_API_URL;\n  } else if ( isWeb && process.env.BASE_ENV === 'development' || !isWeb && process.env.BASE_ENV === 'development' ) {\n    apiURL = DEVELOPMENT_API_URL;\n  } else if ( isWeb && process.env.BASE_ENV === 'local' ) {\n    apiURL = DEVELOPMENT_LOCAL_APP_API_URL;\n  }\n\n  // app\n  if (!isWeb && process.env.BASE_ENV === 'production') {\n    apiURL = PRODUCTION_API_URL;\n  } else if (!isWeb && process.env.BASE_ENV === 'staging') {\n    apiURL = STAGING_API_URL;\n  } else if (!isWeb && process.env.BASE_ENV === 'development') {\n    apiURL = DEVELOPMENT_API_URL;\n  } else if (!isWeb && process.env.BASE_ENV === 'local') {\n    apiURL = DEVELOPMENT_LOCAL_APP_API_URL;\n  }\n  \n  console.log('apiURL: ', apiURL, process.env.API_URL);\n\n  return process.env.API_URL;\n};\n\nexport const getBaseDomainOrigin = () => {\n  let apiURL = 'http://localhost:3000';\n\n  if (isWeb && process.env.BASE_ENV === 'production') {\n    apiURL = `https://app.${process.env.BASE_NAME}.com`;\n  } else if (isWeb && process.env.BASE_ENV === 'staging') {\n    apiURL = `https://beta.${process.env.BASE_NAME}.com`;\n  }\n\n  if (!isWeb && process.env.BASE_ENV === 'production') {\n    apiURL = `https://app.${process.env.BASE_NAME}.com`;\n  } else if (!isWeb && process.env.BASE_ENV === 'staging') {\n    apiURL = `https://beta.${process.env.BASE_NAME}.com`;\n  }\n\n  return apiURL;\n};\n\nexport const askRecordAudioPermission = async () => {\n  // will print true / false based on the ability of the current device (or web browser) to record audio\n  const canRecord = await VoiceRecorder.canDeviceVoiceRecord();\n  console.debug('canRecord', JSON.stringify(canRecord));\n  const hasRecordPermission = await VoiceRecorder.hasAudioRecordingPermission()\n  console.debug('hasRecordPermission', JSON.stringify(hasRecordPermission));\n  /**\n    * will prompt the user to give the required permission, after that\n    * the function will print true / false based on the user response\n    */\n  let hasAnswerPermission = null;\n  if (!!canRecord?.value && !hasRecordPermission?.value) {\n    hasAnswerPermission = await VoiceRecorder.requestAudioRecordingPermission()\n    console.debug('hasAnswerPermission', JSON.stringify(hasAnswerPermission));\n  }\n  \n  return {\n    canRecord: canRecord?.value,\n    hasRecordPermission: hasRecordPermission?.value,\n    hasAnswerPermission\n  };\n}\n\nexport const askCameraPermissions = () => {\n  Camera.checkPermissions()\n    .then(result => {\n      if (result?.camera !== 'granted' || result?.photos !== 'granted') {\n        Camera.requestPermissions().then(result => {\n          console.debug('info Camera.requestPermissions: ' + JSON.stringify(result));\n        });\n      }\n    })\n    .catch(error => console.log('info Camera Error: ' + JSON.stringify(error)));\n};\n\nexport const usePhotoGallery = () => {\n  const takePhoto = async () => {\n    const photo = await Camera.getPhoto({\n      resultType: CameraResultType.Uri,\n      source: CameraSource.Camera,\n      quality: 100,\n    });\n  };\n\n  return {\n    takePhoto,\n  };\n};\n\nexport const takePicture = async () => {\n  const options = {\n    quality: 90,\n    // allowEditing: true,\n    resultType: CameraResultType.Uri,\n  };\n\n  const originalPhoto = await Camera.getPhoto(options);\n\n  // originalPhoto.webPath will contain a path that can be set as an image src.\n  // You can access the original file using image.path, which can be\n  // passed to the Filesystem API to read the raw data of the image,\n  // if desired (or pass resultType: CameraResultType.Base64 to getPhoto)\n  let photoPath = originalPhoto.webPath;\n\n  //console.debug('photoPath: ', JSON.stringify(photoPath));\n\n  return photoPath;\n};\n\nexport const downloadAndInstallApk = async (apkUrl, appId) => {\n  if (!!apkUrl && !!appId) {\n    try {\n      // Open the APK file in the device's browser\n      await Browser.open({ url: apkUrl });\n  \n      // Check if the app was installed successfully\n      const isInstalled = await App.isInstalled({ id: appId });\n      if (isInstalled) {\n        alert('Update installed successfully. Restarting the app...');\n        const deviceInfo = await Device.getInfo();\n        if (deviceInfo.platform === 'ios') {\n          // On iOS, you'll need to manually restart the app after the update is installed\n          // Your implementation for restarting the app goes here\n          alert(`On iOS, you'll need to manually restart the app after the update is installed`);\n        } else {\n          // On Android, the app will automatically restart after the update is installed\n          App.exitApp();\n        }\n      } else {\n        alert('Failed to install update');\n      }\n    } catch (error) {\n      console.error(error);\n    //  alert('Failed to install update');\n    }\n  } else {\n    console.error(`Error in downloadAndInstallApk: apkUrl or appId is Empty!!`)\n    console.debug(`Error in downloadAndInstallApk: apkUrl or appId is Empty!!`)\n  }\n\n}\n\nexport {\n  // core\n  Capacitor,\n  PushNotifications,\n  Camera\n};","import axios from 'axios';\r\nimport { CapacitorUpdater } from '@capgo/capacitor-updater';\r\nimport { Dialog } from '@capacitor/dialog';\r\nimport { Toast } from '@capacitor/toast';\r\n\r\nimport {\r\n  isWeb,\r\n  appInfo,\r\n  getBaseApiUrl,\r\n} from './helper.capacitor';\r\n\r\naxios.defaults.baseURL = getBaseApiUrl();\r\n\r\nconst appIsReady = async () => {\r\n  return await CapacitorUpdater.notifyAppReady();\r\n}\r\n\r\nconst getAppVersion = async () => {\r\n  const appIn = await appInfo() || {};\r\n  const { id, build, version } = appIn;\r\n\r\n  const current = await CapacitorUpdater.current();\r\n  const { version: bundleVersion2 } = current.bundle;\r\n  const bundlVersion = bundleVersion2 != 'builtin' ?  bundleVersion2 : version;\r\n  const bundlBuild = bundleVersion2 != 'builtin' ?  Number(bundlVersion.replaceAll('.', '')) : build;\r\n\r\n  const result = await axios.post(`auth/control/${version}`, { isApp: true }).then(res => res.data);\r\n\r\n  let resultVersion = version;\r\n  let resultBuild = build;\r\n  let newVerstion = version;\r\n  let newBuild = build;\r\n\r\n  if (bundlBuild < result?.currentBuild) {\r\n    resultBuild = bundlBuild;\r\n    resultVersion = bundlVersion;\r\n    newVerstion = result?.currentVersion;\r\n    newBuild = result?.currentBuild;\r\n  } else if ( bundlBuild >= result?.currentBuild ) {\r\n    if (build == bundlBuild) {\r\n      resultBuild = build;\r\n      resultVersion = version;\r\n      newVerstion = result?.currentVersion;\r\n      newBuild = result?.currentBuild;\r\n    } else if ( build < bundlBuild  ) {\r\n      resultBuild = bundlBuild;\r\n      resultVersion = bundlVersion;\r\n      newVerstion = result?.currentVersion;\r\n      newBuild = result?.currentBuild;\r\n    }\r\n  }\r\n\r\n  /* console.debug(`run bundle current!`, JSON.stringify(appIn));\r\n  console.debug(`run bundle current!`, JSON.stringify(current));\r\n  console.debug(`run bundle current!`, JSON.stringify(result)); */\r\n  const final = {\r\n    version: resultVersion,\r\n    build: resultBuild,\r\n    newBuild: newBuild,\r\n    newVersion: newVerstion\r\n  };\r\n /*  console.debug(`run bundle final!`, JSON.stringify(final)); */\r\n  return final;\r\n}\r\n\r\nconst checkAndUpdateApp = async () => { \r\n\r\n  const appIn = await appInfo() || {};\r\n  const { id, build, version } = appIn;\r\n\r\n\r\n  if (!!version) {\r\n    const currentBundl = await getAppVersion();\r\n    const result = await axios.post(`auth/control/${version}`, { isApp: true }).then(res => res.data);\r\n    if (currentBundl?.build < result?.currentBuild) {\r\n      await checkAndUpdate({\r\n        url: result?.url,\r\n        version: result?.currentVersion\r\n      });\r\n    } else {\r\n      Toast.show({\r\n        text: `The current version is up to date`,\r\n        duration: 'short',\r\n      });\r\n    }\r\n    return {...result, ...appIn};\r\n  } else {\r\n    Toast.show({\r\n      text: `The current version is up to date`,\r\n      duration: 'short',\r\n    });\r\n    return appIn;\r\n  }\r\n  \r\n};\r\n\r\nconst checkAndUpdate = async (props) => {\r\n  const { url, version } = props;\r\n // console.debug('run checkAndUpdate:', JSON.stringify(props));\r\n  const canAutoUpdate = await CapacitorUpdater.isAutoUpdateEnabled().then(r => r?.enabled);\r\n  //console.debug('run canAutoUpdate:', JSON.stringify( canAutoUpdate));\r\n  if (!!canAutoUpdate) {\r\n    if (!!url) {\r\n       // Show an alert to the user asking if they want to update\r\n      const { value } = await Dialog.confirm({\r\n        title: 'Confirm',\r\n        message: `A new update is available, do you want to download it now?`,\r\n      });\r\n      \r\n      if (!!value) {\r\n        // Start the download\r\n        CapacitorUpdater.download({\r\n          url,\r\n          version\r\n        }).then((BundleInfo) => {\r\n          CapacitorUpdater.set(BundleInfo); \r\n        });\r\n      }\r\n    } else {\r\n      Toast.show({\r\n        text: `File download error, please try again later.`,\r\n        duration: 'short',\r\n      });\r\n    }\r\n  } else {\r\n    console.debug('run checkAndUpdate Error: isAutoUpdateEnabled is disabled');\r\n  }\r\n}\r\n\r\n/* \r\nBundleInfo:\r\n  id:\tstring\r\n  version:\tstring\r\n  downloaded:\tstring\r\n  checksum:\tstring\r\n  status:\t\"success\" | \"error\" | \"pending\" | \"downloading\"\r\n*/\r\n\r\nconst appDownloadComplete = (bundle) => {\r\n  // console.debug(`appDownloadComplete!`, JSON.stringify(bundle));\r\n  Toast.show({\r\n    text: \"Update downloaded, the app will now reload\",\r\n    duration: 'short',\r\n  });\r\n  // Reload the app to apply the update\r\n  CapacitorUpdater.reload();\r\n};\r\n\r\nconst appDownloading = (info, setProgressPercent) => {\r\n  const { percent, bundle } = info;\r\n  /* console.debug(`Download progress: ${percent}`, percent > 0 && percent != 100); */\r\n  // Show the download progress as a toast\r\n  setProgressPercent(percent);\r\n  if ( percent == 0 ) {\r\n    // Show the updated download progress as a toast\r\n    Toast.show({\r\n      text: `Downloading is started... Please wait a moment!`,\r\n      duration: 'short',\r\n    });\r\n  }\r\n  \r\n};\r\n\r\nconst appDownloadFailed = async (version) => {\r\n  //console.debug(`appDownloadFailed!`, JSON.stringify(version));\r\n  Toast.show({\r\n    text: `File download error, please try again later.`,\r\n    duration: 'short',\r\n  });\r\n};\r\nconst appNoNeedUpdate = async (bundle) => {\r\n  const currentBundl = await getAppVersion();\r\n  // console.debug(`apppNoNeedUdate!`, JSON.stringify(bundle));\r\n//console.debug(`appNoNeedUpdate! currentBundl`, JSON.stringify(currentBundl));\r\n  if (currentBundl?.build < result?.newBuild) { \r\n    checkAndUpdateApp();\r\n  }\r\n};\r\n\r\nconst appUpdateAvailable = async (bundle) => {\r\n  //const { version, status, downloaded, id, checksum } = bundle;\r\n // const currentBundl = await getAppVersion();\r\n  // console.debug(`appUpdateAvailable!`, JSON.stringify(bundle));\r\n  // console.debug(`appUpdateAvailable! currentBundl`, JSON.stringify(currentBundl));\r\n};\r\nconst appReloadedCallback = async (bundle) => {\r\n  //console.debug(`appReloadedCallback!`, JSON.stringify(bundle));\r\n  // Delete the downloaded zip archive\r\n  CapacitorUpdater.delete();\r\n};\r\n\r\nexport default {\r\n  getAppVersion,\r\n  checkAndUpdateApp,\r\n  appIsReady,\r\n  checkAndUpdate,\r\n  appDownloadComplete,\r\n  appDownloading,\r\n  appDownloadFailed,\r\n  appNoNeedUpdate,\r\n  appUpdateAvailable,\r\n  appReloadedCallback\r\n}","import { Capacitor } from '@capacitor/core';\nimport { PushNotifications } from '@capacitor/push-notifications';\nimport { Device } from '@capacitor/device';\nimport axios from 'axios';\n\nimport { FCM } from '@capacitor-community/fcm';\n// utils\nimport { isAndroid, getBaseApiUrl } from './helper.capacitor';\n\nconst apiURL = getBaseApiUrl();\naxios.defaults.baseURL = apiURL;\nconst baseURL = apiURL;\n\n//console.debug('info baseURL: ' + JSON.stringify(baseURL));\n\n/* const logDeviceInfo = async () => {\n  const info = await Device.getInfo();\n  // console.debug('info: ' + JSON.stringify(info));\n  return info;\n};\n\nconst logDeviceId = async () => {\n  const id = await Device.getId();\n  // console.debug('info id: ' + JSON.stringify(id));\n  return id;\n}; */\n\nconst isPushNotificationsAvailable = Capacitor.isPluginAvailable(\n  'PushNotifications',\n);\n\n// Get FCM token instead the APN one returned by Capacitor\nconst registerPush = async userId => {\n  // external required step\n  // register for push\n  await PushNotifications.requestPermissions();\n  await PushNotifications.register();\n\n  // Enable the auto initialization of the library\n  FCM.setAutoInit({ enabled: true }).then(() =>\n    console.log(`Auto init enabled`),\n  );\n\n  // Check the auto initialization status\n  FCM.isAutoInitEnabled().then(r => {\n    console.log('Auto init is ' + (r.enabled ? 'enabled' : 'disabled'));\n  });\n\n};\n\nexport default {\n  isPushNotificationsAvailable,\n  registerPush,\n}","import axios from 'axios';\r\n// utils\r\nimport { getBaseApiUrl } from 'appCapacitor/helpers';\r\n\r\naxios.defaults.baseURL = getBaseApiUrl();\r\n\r\nexport const endpoint = {\r\n  users: {\r\n    single:  (userID) => !!userID && (`users/${userID}`),\r\n    childrenList: (parentID) => !!parentID && (\r\n      `users/${parentID}/children`\r\n    ),\r\n  },\r\n}\r\n\r\nconst api = {\r\n  auth: {\r\n    checkAppVersion: (appVersion, isAppData) =>\r\n      !!appVersion && axios.post(`auth/control/${appVersion}`, { isApp: isAppData }).then(res => res.data),\r\n    forgotPassword: data =>\r\n      !!data && axios.post(`auth/forgot`, data).then(res => res.data),\r\n    resetPassword: data =>\r\n      !!data && axios.post(`auth/reset`, data).then(res => res.data),\r\n    confirmProfile: data =>\r\n      !!data && axios.post(`auth/confirm`, data).then(res => res.data),\r\n    resendConfirmProfile: data =>\r\n      !!data && axios.post(`auth/confirm/resend`, data).then(res => res.data),\r\n    signUp: newUser =>\r\n      !!newUser && axios.post(`auth/signup`, newUser).then(res => res.data),\r\n  },\r\n  route: {\r\n    fetchAll: (endpoint, endponitSend) =>\r\n      axios\r\n        .get(endpoint, {\r\n          params: endponitSend,\r\n        })\r\n        .then(res => res.data.data),\r\n    findAll: (endpoint, endponitSend) =>\r\n      axios\r\n        .post(endpoint, {\r\n          params: endponitSend,\r\n        })\r\n        .then(res => res.data),\r\n    fetchById: (endpoint, id) =>\r\n      !!id && axios.get(`${endpoint}/${id}`).then(res => res.data),\r\n    update: (endpoint, objectData) =>\r\n      axios.patch(`${endpoint}/`, objectData).then(res => res.data),\r\n    updateMedia: body =>\r\n      axios.patch(`media/upload/`, body).then(res => res.data),\r\n    remove: (endpoint, objectData) =>\r\n      axios.patch(`${endpoint}/remove`, objectData).then(res => res.data),\r\n  },\r\n\r\n  users: {\r\n    getByID: id => !!id && axios.get(endpoint.users.single(id)).then(res => res.data),\r\n  },\r\n};\r\n\r\nexport function setAuthorizationHeader(token) {\r\n  const currentUser = JSON.parse(localStorage.getItem(`${process.env.BASE_NAME}_user`));\r\n  if (!!token || currentUser?.token) {\r\n    const initToken = !!token ? token : currentUser?.token;\r\n    axios.defaults.headers.common.Authorization = `Token ${initToken}`;\r\n  } else {\r\n    delete axios.defaults.headers.common.Authorization;\r\n  }\r\n};\r\n\r\nexport default api;\r\n","import { useLayoutEffect, useState } from \"react\";\r\n/* \r\nUpdate isMobile state when the window is resized\r\nUpdate isMobile state when the component mounts and determine whether the user is on a mobile device by checking the user agent string and the window width\r\nReturn isMobile state as an object\r\n*/\r\nexport default function useDeviceDetect() {\r\n  const [isMobile, setMobile] = useState(false);\r\n\r\n  useLayoutEffect(() => {\r\n    const handleResize = () => {\r\n      const width = window.innerWidth || screen.width;\r\n      setMobile(width < 800);\r\n    };\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  }, []);\r\n\r\n  useLayoutEffect(() => {\r\n    const userAgent = typeof window.navigator === \"undefined\"\r\n      ? \"\"\r\n      : navigator.userAgent;\r\n\r\n    let mobile = Boolean(\r\n      userAgent.match(\r\n        /Android|BlackBerry|iPhone|iPad|iPod|Opera Mini|IEMobile|WPDesktop/i\r\n      )\r\n    );\r\n\r\n    if (!mobile) {\r\n      const width = window.innerWidth || screen.width;\r\n      mobile = width < 800;\r\n    }\r\n\r\n    setMobile(mobile);\r\n  }, []);\r\n\r\n  return { isMobile };\r\n}","import {useRef, useLayoutEffect} from \"react\"\n\nconst useMounted = () => {\n  const mountedRef = useRef()\n\n  useLayoutEffect(() => {\n    mountedRef.current = true\n    return () => {\n      mountedRef.current = false\n    }\n  }, [])\n  return mountedRef\n}\n\nexport default useMounted\n","import {useReducer, useCallback, useRef} from \"react\"\nimport useMounted from \"./useMounted\"\n\nfunction useSafedDispatch(dispatch) {\n  const mounted = useMounted()\n\n  return useCallback(\n    (...args) => {\n      if (mounted) {\n        return dispatch(...args)\n      }\n    },\n    [dispatch, mounted],\n  )\n}\n\nconst defaultState = {status: \"idle\", data: null, error: null}\n\nfunction useAsync(initialState = {}) {\n  const initStateRef = useRef({\n    ...defaultState,\n    ...initialState,\n  })\n\n  const [{data, status, error}, unsafeDispatch] = useReducer(\n    (a, b) => ({...a, ...b}),\n    initStateRef.current,\n  )\n\n  const dispatch = useSafedDispatch(unsafeDispatch)\n\n  const setData = useCallback(data => dispatch({data, status: \"resolved\"}), [\n    dispatch,\n  ])\n\n  const setError = useCallback(error => dispatch({error, status: \"rejected\"}), [\n    dispatch,\n  ])\n\n  const reset = useCallback(() => dispatch(initStateRef.current), [dispatch])\n\n  const run = useCallback(\n    promise => {\n      if (!promise) {\n        return\n      }\n      dispatch({status: \"pending\"})\n\n      promise.then(\n        data => {\n          setData(data)\n          return data\n        },\n        error => {\n          setError(error)\n          return error\n        },\n      )\n    },\n    [dispatch, setData, setError],\n  )\n\n  return {\n    data,\n    run,\n    status,\n    error,\n    setData,\n    setError,\n    reset,\n    isLoading: status === \"pending\",\n    isSuccess: status === \"resolved\",\n    isError: status === \"rejected\",\n    isIdle: status === \"idle\",\n  }\n}\n\nexport default useAsync\n","import { useEffect, useState } from 'react';\r\n\r\nconst useAuthRole = roles => {\r\n  const [isAllowed, setIsAllowed] = useState(false);\r\n  useEffect(() => {\r\n    const localUser = JSON.parse(\r\n      localStorage.getItem(`${process.env.BASE_NAME}_user`),\r\n    );\r\n    if (roles.includes(localUser?.role)) {\r\n      setIsAllowed(true);\r\n    } else {\r\n      setIsAllowed(false);\r\n    }\r\n  }, [roles]);\r\n  return isAllowed;\r\n};\r\n\r\nuseAuthRole.defaultProps = {\r\n  roles: ['admin'],\r\n};\r\n\r\nexport default useAuthRole;","import { createBrowserHistory } from 'history';\r\nimport { useLocation } from 'react-router-dom';\r\nconst history = createBrowserHistory();\r\n\r\n// For searching query into url\r\nexport function useQuery() {\r\n  return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nexport default history;","import React, {\r\n  createContext,\r\n  useContext,\r\n  useState,\r\n  useEffect,\r\n  useCallback,\r\n  useReducer,\r\n  useRef,\r\n} from 'react';\r\nimport axios from 'axios';\r\nimport _find from 'lodash/find';\r\n\r\n// utils\r\nimport api, { endpoint, setAuthorizationHeader } from 'appAPI/axiosAPI';\r\n// hooks\r\nimport { useAsync, useDeviceDetect } from 'appHooks';\r\nimport history from 'utils/history';\r\n\r\n// capacitor\r\nimport { appPushNotifications, getBaseApiUrl, isWeb, askCameraPermissions, askRecordAudioPermission } from 'appCapacitor/helpers';\r\n\r\nconst apiURL = getBaseApiUrl();\r\naxios.defaults.baseURL = apiURL;\r\n\r\n/**\r\n * Context for Notifications\r\n */\r\nconst initState = {\r\n  _id: null,\r\n  username: false,\r\n  email: false,\r\n  language: '',\r\n  lastAction: '',\r\n  description: false,\r\n  address: false,\r\n  image: false,\r\n  role: false,\r\n  userAuth: false,\r\n  isTourFinished: false,\r\n  registrationTokens: [],\r\n  notifications: [],\r\n  notificationsSetting: {\r\n    pushNotification: true,\r\n    emailNotification: true,\r\n  },\r\n  lastOpenedApp: '',\r\n};\r\nconst reducer = (s, v) => ({ ...s, ...v });\r\n\r\nconst UserContext = createContext();\r\nconst UserDispatchContext = createContext();\r\n\r\nexport const useStateUser = () => {\r\n  const user = useContext(UserContext);\r\n  if (!user) {\r\n    throw Error('useStateUser must be call withing UserProvider');\r\n  }\r\n  return user;\r\n};\r\n\r\nexport const useDispatchUser = () => {\r\n  const setUser = useContext(UserDispatchContext);\r\n  if (!setUser) {\r\n    throw Error('useDispatchUser must be call withing UserProvider');\r\n  }\r\n  return setUser;\r\n};\r\n\r\nexport const UserProvider = ({ children }) => {\r\n\r\n  let UserProviderData = {};\r\n\r\n  const [user, setUser] = useReducer(reducer, initState);\r\n  const [token, setToken] = useState('');\r\n\r\n  const [logOutTimer, setLogOutTimer] = useState(false);\r\n\r\n  const { isLoading, isSuccess, run, data } = useAsync();\r\n  const { isMobile } = useDeviceDetect();\r\n\r\n  const publicPaths = ['/signupparent', '/reset', '/confirm', '/404'];\r\n\r\n    // check if open page for online\r\n  // if detail page => is on open page except community detail page\r\n  UserProviderData.isPublicPath = useCallback(() => {\r\n    const pathname = window.location.pathname;\r\n    const isPath = publicPaths.some(p => pathname.includes(p));\r\n    if (!!isPath) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }, []);\r\n\r\n  UserProviderData.initUser = useCallback(async () => {\r\n    const localUser = await UserProviderData.getLocalUser();\r\n    if (!!localUser) {\r\n      localStorage.setItem('logout', false);\r\n      setToken(localUser?.token);\r\n      setAuthorizationHeader(localUser?.token);\r\n      if (!!localUser?._id) {\r\n        run(api.users.getByID(localUser?._id));\r\n      }\r\n    } else {\r\n      if (UserProviderData.isPublicPath()) {\r\n        return false;\r\n      } else {\r\n        history.push('/login');\r\n      }\r\n\r\n    }\r\n  }, [history, localStorage]);\r\n\r\n  // this useEffect runs only the first render\r\n  useEffect(() => {\r\n    UserProviderData.initUser();\r\n    return () => {\r\n      logOutTimer && clearTimeout(logOutTimer);\r\n    }\r\n  }, []);\r\n\r\n  /**\r\n   * Loading data for rendering in a component\r\n   * - work like ComponentDidUpdate\r\n   */\r\n  useEffect(() => {\r\n    if (isSuccess && data) {\r\n     // console.debug('data', JSON.stringify(data))\r\n      setUser(({ ...user, ...data }));\r\n    }\r\n  }, [data]);\r\n\r\n\r\n  /**\r\n   * User Core\r\n   */\r\n  UserProviderData.addToken = useCallback(token => setToken(token), []);\r\n\r\n  UserProviderData.setAutorization = useCallback(auth => {\r\n    setUser({ ...user, userAuth: auth ? true : false });\r\n    auth && localStorage.setItem('logout', false);\r\n  }, [setUser, user]);\r\n\r\n  UserProviderData.isAuthenticated = useCallback(() => {\r\n    const local = localStorage.getItem(`${process.env.BASE_NAME}_user`);\r\n    let localUser = false;\r\n    if (local !== null) {\r\n      const localJson = JSON.parse(local);\r\n      localUser = !!localJson?.token;\r\n    }\r\n    return localUser;\r\n  }, []);\r\n\r\n  UserProviderData.populateUser = useCallback(async userData => {\r\n    setUser({ ...user, ...userData });\r\n    console.debug('WEB - REGISTRATION');\r\n    //console.debug('WEB - REGISTRATION:', isWeb, userData?.role, userData?.token);\r\n    setAuthorizationHeader(userData?.token);\r\n\r\n    if (!isWeb) {\r\n      console.debug('Capacitor - REGISTRATION');\r\n      askCameraPermissions();\r\n      askRecordAudioPermission();\r\n      appPushNotifications.registerPush(userData._id);\r\n    }\r\n  }, [user, isWeb]);\r\n\r\n  UserProviderData.patchUser = useCallback(async userData => {\r\n    if (!!userData?._id) {\r\n      const userResult = await api.users.update(userData);\r\n      if (userResult) {\r\n        setUser(prev => ({ ...prev, ...userResult }));\r\n      } else {\r\n        console.error('patchUser Error');\r\n      }\r\n    } else {\r\n      console.error('patchUser Error: inside userData don`t have \"_id\"');\r\n    }\r\n  }, [user]);\r\n\r\n\r\n  /**\r\n   * Local Data & Functions\r\n   */\r\n  UserProviderData.getLocalUser = useCallback(() => {\r\n    const local = localStorage.getItem(`${process.env.BASE_NAME}_user`);\r\n    const localData = local !== null && JSON.parse(local);\r\n    return localData || false;\r\n  }, []);\r\n\r\n  UserProviderData.setCookie = useCallback(() => {\r\n    document.cookie = \"for=checkingDailyModal; expires=\" + date.getTime() + (24 * 60 * 60 * 1000);\r\n  }, []);\r\n\r\n  UserProviderData.checkCookie = useCallback(() => {\r\n    let cookie = document.cookie.split(\";\");\r\n    if (cookie[0].split(\"=\")[1] = \"checkingDailyModal\" && new Date().valueOf() >= new Date(cookie[1].split(\"=\")[1]).valueOf()) {\r\n      UserProviderData.setCookie();\r\n    }\r\n  }, []);\r\n\r\n\r\n  /**\r\n   * Other\r\n   */\r\n  UserProviderData.logOut = useCallback(() => {\r\n    localStorage.setItem('logout', true);\r\n    localStorage.removeItem(`${process.env.BASE_NAME}_user`);\r\n    setUser(initState);\r\n\r\n    const logOutTimer = setTimeout(function () {\r\n      //window.location.href = '/login';\r\n      history.push('/login');\r\n    }, 0);\r\n    setLogOutTimer(logOutTimer);\r\n\r\n    return true;\r\n  }, [setLogOutTimer]);\r\n\r\n\r\n\r\n\r\n  /**\r\n   * User Context ROOT\r\n   */\r\n  return (\r\n    <UserContext.Provider value={{\r\n      ...user,\r\n      ...UserProviderData,\r\n  \r\n      // CUSTOM STATES\r\n  \r\n      // fech user data on init\r\n      isLoading,\r\n      isSuccess,\r\n      // token\r\n      token,\r\n  \r\n    }}>\r\n      <UserDispatchContext.Provider value={setUser}>\r\n        {children}\r\n      </UserDispatchContext.Provider>\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\n/**\r\n * User Context HOOK\r\n */\r\nexport const withUser = Component => props => (\r\n  <UserContext.Consumer>\r\n    {store => <Component user={store} {...props} />}\r\n  </UserContext.Consumer>\r\n);\r\n\r\n\r\n/**\r\n * User Context HOOK FUNCTIONS\r\n */\r\n\r\nexport function useSetUserData() {\r\n  const user = useStateUser();\r\n  const setUserD = useDispatchUser();\r\n  return newUserData => {\r\n    const newUser = { ...user, ...newUserData };\r\n    setUserD(newUser);\r\n  };\r\n}\r\n\r\nexport function useUserPatchData() {\r\n  const user = useStateUser();\r\n  return newUserData => {\r\n    const userId = newUserData?._id ? newUserData?._id : user?._id;\r\n    return !!userId && user.patchUser({\r\n      _id: userId,\r\n      ...newUserData\r\n    })\r\n  };\r\n}\r\n\r\nexport function useLogout() {\r\n  const user = useStateUser();\r\n // const setUserD = useDispatchUser();\r\n  return () => {\r\n    return user.logOut();\r\n  };\r\n}\r\n\r\nexport function useGetLocalUser() {\r\n  return () => {\r\n    const local = localStorage.getItem(`${process.env.BASE_NAME}_user`);\r\n    const localData = local !== null && JSON.parse(local);\r\n    return localData || false;\r\n  };\r\n}\r\n\r\nexport function useInitUser() {\r\n  const user = useStateUser();\r\n  return () => user.initUser();\r\n}","import React from 'react';\r\nimport CookieProvider from './CookieProvider';\r\nimport { UserProvider } from './User.context';\r\n\r\nfunction AppProviders({ children }) {\r\n  return (\r\n    <CookieProvider>\r\n      <UserProvider>\r\n        {children}\r\n      </UserProvider>\r\n    </CookieProvider>\r\n  );\r\n}\r\n\r\nexport { AppProviders };\r\nexport default AppProviders;","import isObject from 'lodash/isObject';\nimport conformsTo from 'lodash/conformsTo';\nimport isFunction from 'lodash/isFunction';\n\nimport invariant from 'tiny-invariant';\n\n\n\n/**\n * Validate the shape of redux store\n */\nexport default function checkStore(store) {\n  const shape = {\n    dispatch: isFunction,\n    subscribe: isFunction,\n    getState: isFunction,\n    replaceReducer: isFunction,\n    runSaga: isFunction,\n    injectedReducers: isObject,\n    injectedSagas: isObject,\n  };\n  invariant(\n    conformsTo(store, shape),\n    '(src/store...) injectors: Expected a valid redux store',\n  );\n}\n","import invariant from 'tiny-invariant';\n\nimport isString from 'lodash/isString';\nimport conformsTo from 'lodash/conformsTo';\nimport isEmpty from 'lodash/isEmpty';\nimport isFunction from 'lodash/isFunction';\n\nimport checkStore from './checkStore';\nimport { DAEMON, ONCE_TILL_UNMOUNT, RESTART_ON_REMOUNT } from './constants';\n\nconst allowedModes = [RESTART_ON_REMOUNT, DAEMON, ONCE_TILL_UNMOUNT];\n\nconst checkKey = key =>\n  invariant(\n    isString(key) && !isEmpty(key),\n    '(src/store...) injectSaga: Expected `key` to be a non empty string',\n  );\n\nconst checkDescriptor = descriptor => {\n  const shape = {\n    saga: isFunction,\n    mode: mode => isString(mode) && allowedModes.includes(mode),\n  };\n  invariant(\n    conformsTo(descriptor, shape),\n    '(src/store...) injectSaga: Expected a valid saga descriptor',\n  );\n};\n\nexport function injectSagaFactory(store, isValid) {\n  return function injectSaga(key, descriptor = {}, args) {\n    if (!isValid) checkStore(store);\n\n    const newDescriptor = {\n      ...descriptor,\n      mode: descriptor.mode || DAEMON,\n    };\n    const { saga, mode } = newDescriptor;\n\n    checkKey(key);\n    checkDescriptor(newDescriptor);\n\n    let hasSaga = Reflect.has(store.injectedSagas, key);\n\n    if (process.env.NODE_ENV !== 'production') {\n      const oldDescriptor = store.injectedSagas[key];\n      // enable hot reloading of daemon and once-till-unmount sagas\n      if (hasSaga && oldDescriptor.saga !== saga) {\n        oldDescriptor.task.cancel();\n        hasSaga = false;\n      }\n    }\n\n    if (\n      !hasSaga ||\n      (hasSaga && mode !== DAEMON && mode !== ONCE_TILL_UNMOUNT)\n    ) {\n      /* eslint-disable no-param-reassign */\n      store.injectedSagas[key] = {\n        ...newDescriptor,\n        task: store.runSaga(saga, args),\n      };\n      /* eslint-enable no-param-reassign */\n    }\n  };\n}\n\nexport function ejectSagaFactory(store, isValid) {\n  return function ejectSaga(key) {\n    if (!isValid) checkStore(store);\n\n    checkKey(key);\n\n    if (Reflect.has(store.injectedSagas, key)) {\n      const descriptor = store.injectedSagas[key];\n      if (descriptor.mode && descriptor.mode !== DAEMON) {\n        descriptor.task.cancel();\n        // Clean up in production; in development we need `descriptor.saga` for hot reloading\n        if (process.env.NODE_ENV === 'production') {\n          // Need some value to be able to detect `ONCE_TILL_UNMOUNT` sagas in `injectSaga`\n          store.injectedSagas[key] = 'done'; // eslint-disable-line no-param-reassign\n        }\n      }\n    }\n  };\n}\n\nexport default function getInjectors(store) {\n  checkStore(store);\n\n  return {\n    injectSaga: injectSagaFactory(store, true),\n    ejectSaga: ejectSagaFactory(store, true),\n  };\n}\n","import React, { useContext, useEffect } from 'react';\nimport { ReactReduxContext } from 'react-redux';\n\nimport getInjectors from './sagaInjectors';\n\n/**\n * Dynamically injects a saga, passes component's props as saga arguments\n *\n * @param {string} key A key of the saga\n * @param {function} saga A root saga that will be injected\n * @param {string} [mode] By default (constants.DAEMON) the saga will be started\n * on component mount and never canceled or started again. Another two options:\n *   - constants.RESTART_ON_REMOUNT — the saga will be started on component mount and\n *   cancelled with `task.cancel()` on component unmount for improved performance,\n *   - constants.ONCE_TILL_UNMOUNT — behaves like 'RESTART_ON_REMOUNT' but never runs it again.\n *\n */\nexport default function withSaga({ key, saga, mode }) {\n  return function withSagaHOC(WrappedComponent) {\n    function InjectSaga(props) {\n      const context = useContext(ReactReduxContext);\n      const injectors = getInjectors(context.store);\n\n      useEffect(() => {\n        injectors.injectSaga(key, { saga, mode }, props);\n\n        return () => {\n          injectors.ejectSaga(key);\n        };\n      }, []);\n\n      return <WrappedComponent {...props} />;\n    }\n\n    InjectSaga.WrappedComponent = WrappedComponent;\n    InjectSaga.displayName = `withSaga(${WrappedComponent.displayName || WrappedComponent.name || 'Component'})`;\n\n    return InjectSaga;\n  };\n}\n\nconst useInjectSaga = ({ key, saga, mode }) => {\n  const context = useContext(ReactReduxContext);\n\n  useEffect(() => {\n    const injectors = getInjectors(context.store);\n    injectors.injectSaga(key, { saga, mode });\n\n    return () => {\n      injectors.ejectSaga(key);\n    };\n  }, []);\n};\n\nexport { withSaga, useInjectSaga };","/*\n * AppConstants\n * Each action has a corresponding type, which the reducer knows and picks up on.\n * To avoid weird typos between the reducer and the actions, we save them as\n * constants here. We prefix them with 'yourproject/YourComponent' so we avoid\n * reducers accidentally picking up actions they shouldn't.\n *\n * Follow this format:\n * export const YOUR_ACTION_CONSTANT = 'yourproject/YourContainer/YOUR_ACTION_CONSTANT';\n */\n\nexport const FLUSH_STATE = 'app/App/FLUSH_STATE';\n\n","/*\n * AppReducer\n *\n * The reducer takes care of our data. Using actions, we can\n * update our application state. To add a new action,\n * add it to the switch statement in the reducer function\n *\n */\n\nimport produce from 'immer';\nimport * as allConst from './constants';\n\n\n// The initial state of the App\nexport const initialState = {\n  loading: false,\n  error: false,\n};\n\nconst appReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case allConst.FLUSH_STATE:\n      return initialState;\n    default:\n      return state;\n  }\n};\n\nexport default produce(appReducer);","/**\r\n * Combine all reducers in this file and export the combined reducers.\r\n */\r\n\r\nimport { combineReducers } from '@reduxjs/toolkit';\r\nimport { createRouterReducer } from '@lagunovsky/redux-react-router';\r\n\r\nimport history from 'utils/history';\r\nimport globalReducer from '../App/reducer';\r\n//import languageProviderReducer from 'containers/LanguageProvider/reducer';\r\n\r\n/**\r\n * Merges the main reducer with the dynamically injected reducers\r\n */\r\nexport default function createReducer(injectedReducers = {}) {\r\n  const rootReducer = combineReducers({\r\n    global: globalReducer,\r\n    // language: languageProviderReducer,\r\n    router: createRouterReducer(history),\r\n    ...injectedReducers\r\n  });\r\n\r\n  return rootReducer;\r\n}","import invariant from 'tiny-invariant';\n\nimport isString from 'lodash/isString';\nimport isEmpty from 'lodash/isEmpty';\nimport isFunction from 'lodash/isFunction';\n\nimport checkStore from './checkStore';\nimport createReducer from './reducers';\n\nexport function injectReducerFactory(store, isValid) {\n  return function injectReducer(key, reducer) {\n    if (!isValid) checkStore(store);\n\n    invariant(\n      isString(key) && !isEmpty(key) && isFunction(reducer),\n      '(src/store...) injectReducer: Expected `reducer` to be a reducer function',\n    );\n\n    // Check `store.injectedReducers[key] === reducer` for hot reloading when a key is the same but a reducer is different\n    if (\n      Reflect.has(store.injectedReducers, key) &&\n      store.injectedReducers[key] === reducer\n    )\n      return;\n\n    store.injectedReducers[key] = reducer; // eslint-disable-line no-param-reassign\n    store.replaceReducer(createReducer(store.injectedReducers));\n  };\n}\n\nexport default function getInjectors(store) {\n  checkStore(store);\n\n  return {\n    injectReducer: injectReducerFactory(store, true),\n  };\n}","import React, { useContext, useEffect } from 'react';\nimport { ReactReduxContext } from 'react-redux';\n\nimport getInjectors from './reducerInjectors';\n\n/**\n * Dynamically injects a reducer\n *\n * @param {string} key A key of the reducer\n * @param {function} reducer A reducer that will be injected\n *\n */\nconst withReducer = ({ key, reducer }) => WrappedComponent => {\n  function ReducerInjector(props) {\n    const context = useContext(ReactReduxContext);\n\n    useEffect(() => {\n      getInjectors(context.store).injectReducer(key, reducer);\n    }, [context.store]);\n\n    return <WrappedComponent {...props} />;\n  }\n\n  ReducerInjector.WrappedComponent = WrappedComponent;\n  ReducerInjector.displayName = `withReducer(${WrappedComponent.displayName ||\n    WrappedComponent.name ||\n    'Component'})`;\n\n  return ReducerInjector;\n};\n\nconst useInjectReducer = ({ key, reducer }) => {\n  const context = useContext(ReactReduxContext);\n  useEffect(() => {\n    getInjectors(context.store).injectReducer(key, reducer);\n  }, [context.store]);\n};\n\nexport { withReducer, useInjectReducer };","import { configureStore, applyMiddleware, getDefaultMiddleware , compose } from '@reduxjs/toolkit';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { createRouterMiddleware, createRouterReducerMapObject, push, ReduxRouter } from '@lagunovsky/redux-react-router';\r\nimport createReducer from './reducers';\r\n\r\nfunction configureAppStore(preloadedState = {}, history) {\r\n  let composeEnhancers = compose;\r\n  const reduxSagaMonitorOptions = {};\r\n\r\n  // If Redux Dev Tools and Saga Dev Tools Extensions are installed, enable them\r\n  /* istanbul ignore next */\r\n  if (process.env.NODE_ENV !== 'production' && typeof window === 'object') {\r\n    /* eslint-disable no-underscore-dangle */\r\n    if (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__)\r\n      composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({});\r\n\r\n    // NOTE: Uncomment the code below to restore support for Redux Saga\r\n    // Dev Tools once it supports redux-saga version 1.x.x\r\n    // if (window.__SAGA_MONITOR_EXTENSION__)\r\n    //   reduxSagaMonitorOptions = {\r\n    //     sagaMonitor: window.__SAGA_MONITOR_EXTENSION__,\r\n    //   };\r\n    /* eslint-enable */\r\n  }\r\n\r\n\r\n  const sagaMiddleware = createSagaMiddleware(reduxSagaMonitorOptions);\r\n  const routerMiddleware = createRouterMiddleware(history);\r\n\r\n // Create the store with two middlewares\r\n  // 1. sagaMiddleware: Makes redux-sagas work\r\n  // 2. routerMiddleware: Syncs the location/URL path to the state\r\n  const middlewares = [sagaMiddleware, routerMiddleware];\r\n\r\n  const store = configureStore({\r\n    reducer: createReducer(),\r\n    middleware: [\r\n      ...getDefaultMiddleware(),\r\n      ...middlewares,\r\n    ],\r\n    preloadedState,\r\n    devTools: process.env.NODE_ENV !== 'production',\r\n  });\r\n\r\n  // Extensions\r\n  store.runSaga = sagaMiddleware.run;\r\n  store.asyncReducers = {};\r\n  store.injectedReducers = {}; // Reducer registry\r\n  store.injectedSagas = {}; // Saga registry\r\n\r\n  // Make reducers hot reloadable, see http://mxs.is/googmo\r\n  /* istanbul ignore next */\r\n  if (process.env.NODE_ENV !== 'production' && module.hot) {\r\n    module.hot.accept('./reducers', () => {\r\n      import('./reducers').then((reducerModule) => {\r\n        const createReducers = reducerModule.default;\r\n        const nextReducers = createReducers(history);\r\n        store.replaceReducer(nextReducers);\r\n      });\r\n    });\r\n  }\r\n\r\n  return store;\r\n}\r\n\r\nexport default configureAppStore;","import { put, takeLatest } from 'redux-saga/effects';\nimport requestWrapper from 'utils/requestWrapper';\n\n\nexport default function* mainAppSaga() {\n  // See example in containers/HomePage/saga.js\n}\n","import { createSelector } from 'reselect';\nimport { initialState } from './reducer';\n\nconst selectGlobal = state => state?.global ?? initialState;\nconst selectRouter = state => state?.router;\n\nexport const makeSelectLoading = () => \n  createSelector(\n    selectGlobal,\n    globalState => globalState.loading\n  );\n\nexport const makeSelectError = () => \n  createSelector(\n    selectGlobal,\n    globalState => globalState.error\n  );","/**\r\n *\r\n * App\r\n *\r\n * This component is the skeleton around the actual pages, and should only\r\n * contain code that should be seen on all pages. (e.g. navigation bar)\r\n */\r\n\r\nimport React, { memo } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { compose } from '@reduxjs/toolkit';\r\nimport { Helmet } from 'react-helmet';\r\n// store\r\nimport { useInjectSaga, useInjectReducer } from 'store';\r\nimport reducer from './reducer';\r\nimport saga from './saga';\r\n// actions\r\nimport { flushState } from './actions';\r\n//selectors\r\nimport {\r\n  makeSelectError,\r\n  makeSelectLoading,\r\n} from './selectors';\r\n\r\n// utils\r\nimport useDeviceDetect from 'engine/hooks/useDeviceDetect';\r\n\r\n\r\n\r\nfunction App({ history }) {\r\n  useInjectReducer({ key: 'appSaga', reducer });\r\n  useInjectSaga({ key: 'appSaga', saga });\r\n\r\n  const { isMobile } = useDeviceDetect();\r\n\r\n  return (\r\n    <>\r\n\r\n      <Helmet titleTemplate=\"%s - SagaBoilerplate\" defaultTitle=\"SagaBoilerplate\">\r\n        <meta name=\"description\" content=\"SagaBoilerplate\" />\r\n        <meta property=\"og:type\" content=\"website\" />\r\n        <meta\r\n          property=\"og:title\"\r\n          content=\"SagaBoilerplate\"\r\n        />\r\n        <meta\r\n          property=\"og:description\"\r\n          content=\"SagaBoilerplate\"\r\n        />\r\n        <meta property=\"og:image\" content=\"\" />\r\n      </Helmet>\r\n\r\n\r\n      <div id=\"top\">\r\n        \r\n        test\r\n\r\n      </div>\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  loading: makeSelectLoading(),\r\n  error: makeSelectError(),\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    dispatch,\r\n    flushState: () => dispatch(flushState()),\r\n  };\r\n}\r\n\r\nconst withConnect = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n);\r\n\r\nexport default compose(\r\n  withConnect,\r\n  memo,\r\n)(App);\r\n\r\n","/*\n * App Actions\n *\n * Actions change things in your application\n * Since this boilerplate uses a uni-directional data flow, specifically redux,\n * we have these actions which are the only way your application interacts with\n * your application state. This guarantees that your state is up to date and nobody\n * messes it up weirdly somewhere.\n *\n * To add a new Action:\n * 1) Import your constant\n * 2) Add a function like this:\n *    export function yourAction(var) {\n *        return { type: YOUR_ACTION_CONSTANT, var: var }\n *    }\n */\n\nimport * as allConst from './constants';\n\n\n\nexport function flushState() {\n  return {\n    type: allConst.FLUSH_STATE,\n  };\n}\n","export default __webpack_public_path__ + \"favicon.ico\";","export default __webpack_public_path__ + \".htaccess\";","/**\r\n * root.js\r\n *\r\n * This is the entry file for the application, only setup and boilerplate\r\n * code.\r\n */\r\nimport 'react-app-polyfill/ie11';\r\nimport 'react-app-polyfill/stable';\r\n// Import all the third party stuff\r\nimport React, { StrictMode } from \"react\";\r\nimport * as ReactDOM from \"react-dom/client\";\r\nimport { ReduxRouter } from '@lagunovsky/redux-react-router';\r\nimport { Provider } from 'react-redux';\r\nimport FontFaceObserver from 'fontfaceobserver';\r\n\r\nimport 'sanitize.css/sanitize.css';\r\n// Global Styles\r\n// import 'scss/app.scss';\r\n\r\n// Import Other Providers\r\nimport AppProviders from 'engine/context/AppProviders';\r\nimport App from './App';\r\nimport Start from 'pages/Start';\r\n\r\n// Load the favicon and the .htaccess file\r\nimport '!file-loader?name=[name].[ext]!public/favicon.ico';\r\nimport 'file-loader?name=.htaccess!public/.htaccess'; // eslint-disable-line import/extensions\r\n\r\n// root\r\nimport { configureAppStore } from 'store';\r\nimport history from 'utils/history';\r\n\r\n// Observe loading of Open Sans (to remove open sans, remove the <link> tag in\r\n// the index.html file and this observer)\r\nconst openSansObserver = new FontFaceObserver('Open Sans', {});\r\n\r\n// When Open Sans is loaded, add a font-family using Open Sans to the body\r\nopenSansObserver.load().then(() => {\r\n  document.body.classList.add('fontLoaded');\r\n});\r\n\r\n// Create redux store with history\r\nconst initialState = {};\r\nconst store = configureAppStore(initialState, history);\r\n\r\n// Tell React to take control of that element\r\n// In TypeScript, since there is a bug, you need to add the \"!\" element!\r\n// https://github.com/DefinitelyTyped/DefinitelyTyped/issues/43848\r\nconst MOUNT_NODE = document.getElementById('app');\r\nconst root = ReactDOM.createRoot(MOUNT_NODE);\r\n\r\n\r\nconst render = (Component) =>\r\n  root.render(\r\n    <StrictMode>\r\n      <Provider store={store} >\r\n        <ReduxRouter history={history}>\r\n          <AppProviders>\r\n            <Component history={history} />\r\n          </AppProviders>\r\n        </ReduxRouter>\r\n      </Provider>\r\n    </StrictMode>\r\n  );\r\n\r\nrender(App);\r\n\r\nif (process.env.NODE_ENV !== 'production' && module.hot) {\r\n  // Hot reloadable React components and translation json files\r\n  // modules.hot.accept does not accept dynamic dependencies,\r\n  // have to be constants at compile-time\r\n  module.hot.accept(['./App'], () => {\r\n    const NextRootContainer = require('./App').default;\r\n//root.unmountComponentAtNode(document.getElementById('app'));\r\n    render(NextRootContainer);\r\n  });\r\n}"],"names":["root","factory","exports","module","define","amd","a","i","self","CookieContext","React","children","useState","cookies","setCookies","Provider","value","setCookie","name","cookieOptions","path","document","cookie","Object","entries","map","key","join","getCookie","cookieValue","split","find","startsWith","Badge","result","count","isSupported","Haptics","style","ImpactStyle","DAEMON","ONCE_TILL_UNMOUNT","BASE_NAME","process","STAGING_API_URL","toString","PRODUCTION_API_URL","isWeb","Capacitor","appInfo","Device","then","App","getBaseApiUrl","apiURL","window","location","origin","includes","console","log","askRecordAudioPermission","VoiceRecorder","canRecord","debug","JSON","stringify","hasRecordPermission","hasAnswerPermission","options","quality","resultType","CameraResultType","Camera","originalPhoto","photoPath","webPath","apkUrl","appId","Browser","url","id","alert","platform","error","axios","CapacitorUpdater","getAppVersion","appIn","build","version","current","bundleVersion2","bundle","bundlVersion","bundlBuild","Number","replaceAll","isApp","res","data","resultVersion","resultBuild","newVerstion","newBuild","currentBuild","currentVersion","final","newVersion","checkAndUpdateApp","currentBundl","checkAndUpdate","Toast","text","duration","props","r","enabled","Dialog","title","message","BundleInfo","isPushNotificationsAvailable","registerPush","userId","PushNotifications","FCM","endpoint","single","userID","childrenList","parentID","api","auth","checkAppVersion","appVersion","isAppData","forgotPassword","resetPassword","confirmProfile","resendConfirmProfile","signUp","newUser","route","fetchAll","endponitSend","params","findAll","fetchById","update","objectData","updateMedia","body","remove","users","getByID","setAuthorizationHeader","token","currentUser","parse","localStorage","getItem","initToken","useDeviceDetect","isMobile","setMobile","useLayoutEffect","handleResize","width","innerWidth","screen","addEventListener","removeEventListener","userAgent","navigator","mobile","Boolean","match","mountedRef","useRef","defaultState","status","initialState","initStateRef","useReducer","b","dispatch","mounted","useMounted","useCallback","useSafedDispatch","setData","setError","reset","run","promise","isLoading","isSuccess","isError","isIdle","useAuthRole","roles","isAllowed","setIsAllowed","useEffect","localUser","role","defaultProps","createBrowserHistory","initState","_id","username","email","language","lastAction","description","address","image","userAuth","isTourFinished","registrationTokens","notifications","notificationsSetting","pushNotification","emailNotification","lastOpenedApp","reducer","s","v","UserContext","createContext","UserDispatchContext","UserProvider","UserProviderData","user","setUser","setToken","logOutTimer","setLogOutTimer","useAsync","publicPaths","isPublicPath","pathname","some","p","initUser","getLocalUser","setItem","history","clearTimeout","addToken","setAutorization","isAuthenticated","local","localJson","populateUser","userData","camera","photos","catch","appPushNotifications","patchUser","userResult","prev","date","getTime","checkCookie","Date","valueOf","logOut","removeItem","setTimeout","checkStore","store","shape","isFunction","subscribe","getState","replaceReducer","runSaga","injectedReducers","isObject","injectedSagas","invariant","conformsTo","allowedModes","checkKey","isString","isEmpty","checkDescriptor","descriptor","saga","mode","injectSagaFactory","isValid","args","newDescriptor","hasSaga","Reflect","has","task","ejectSagaFactory","cancel","useInjectSaga","context","useContext","ReactReduxContext","injectors","injectSaga","ejectSaga","getInjectors","FLUSH_STATE","loading","produce","state","type","allConst","createReducer","rootReducer","combineReducers","global","globalReducer","router","createRouterReducer","injectReducerFactory","useInjectReducer","injectReducer","preloadedState","compose","sagaMiddleware","createSagaMiddleware","middlewares","createRouterMiddleware","configureStore","middleware","getDefaultMiddleware","devTools","asyncReducers","mainAppSaga","selectGlobal","mapStateToProps","createStructuredSelector","createSelector","globalState","withConnect","connect","flushState","memo","Helmet","titleTemplate","defaultTitle","content","property","FontFaceObserver","load","classList","add","Component","configureAppStore","MOUNT_NODE","getElementById","ReactDOM","render","StrictMode"],"sourceRoot":""}